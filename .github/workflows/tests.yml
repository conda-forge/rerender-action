name: tests

on:
  push:
    branches:
      - main
  pull_request: null
  schedule:
    - cron: "0 6 * * SUN" # Once weekly on Sunday @ 0600 UTC
  workflow_dispatch: null

concurrency:
  group: ${{ github.workflow }}

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: setup conda
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: configure conda and install code
        run: |
          pip install --no-deps -e .

      - name: run tests
        run: |
          pytest -vv webservices_dispatch_action
          command -v run-webservices-dispatch-action

      - name: generate token
        id: generate_token
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: set up docker buildx
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: login to docker hub
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: condaforgebot
          password: ${{ secrets.CF_BOT_DH_PASSWORD }}

      - name: build and push docker image
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v5
        with:
          push: true
          tags: condaforge/webservices-dispatch-action:dev

      - name: setup live tests
        id: live_tests
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          git config --global user.name "conda-forge-admin"
          git config --global user.email "pelson.pub+conda-forge@gmail.com"
          git config --global pull.rebase false
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi
          echo "branch=${branch}" >> "$GITHUB_OUTPUT"

      - name: run live rerender tests
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_rerender_test.py --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run live version update tests
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_version_update_test.py --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run live version update tests w/ user version
        if: github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_version_update_test.py --version=0.14 --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

  docker-push:
    name: push docker image
    runs-on: "ubuntu-latest"
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: set up docker buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: login to docker hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: condaforgebot
          password: ${{ secrets.CF_BOT_DH_PASSWORD }}

      - name: build and push
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v5
        with:
          push: true
          tags: condaforge/webservices-dispatch-action:prod

      - name: push README to docker hub
        uses: christian-korneck/update-container-description-action@d36005551adeaba9698d8d67a296bd16fa91f8e8 # v1
        env:
          DOCKER_USER: condaforgebot
          DOCKER_PASS: ${{ secrets.CF_BOT_DH_PASSWORD }}
        with:
          destination_container_repo: condaforge/webservices-dispatch-action:prod
          provider: dockerhub
          short_description: "conda-forge image used to power the admin webservices GitHub Actions integrations"
          readme_file: "Dockerfile_README.md"

  keepalive-job:
    name: keep alive
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      actions: write
    steps:
      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: keep alive
        uses: gautamkrishnar/keepalive-workflow@24ba73b43d5ea8d2b3d56fb9b8de951ba9a3dd18 # 2.0.6
