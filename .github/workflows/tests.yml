name: tests

on:
  workflow_dispatch: null
  pull_request: null
  merge_group: null

concurrency:
  group: ${{ github.workflow }}

jobs:
  tests:
    name: tests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - name: checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4

      - name: setup conda
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: configure conda and install code
        run: |
          pip install --no-deps -e .

      - name: run tests
        run: |
          pytest -vv webservices_dispatch_action
          command -v run-webservices-dispatch-action

      - name: set up docker buildx
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: login to docker hub
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: condaforgebot
          password: ${{ secrets.CF_BOT_DH_PASSWORD }}

      - name: build and push docker image
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v5
        with:
          push: true
          tags: condaforge/webservices-dispatch-action:dev

  linter-tests:
    name: linter-tests
    needs: [tests]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - name: checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4

      - name: setup conda
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: configure conda and install code
        run: |
          pip install --no-deps -e .

      - name: generate token
        id: generate_token
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: setup live tests
        id: live_tests
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          git config --global user.name "conda-forge-admin"
          git config --global user.email "pelson.pub+conda-forge@gmail.com"
          git config --global pull.rebase false
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi
          echo "branch=${branch}" >> "$GITHUB_OUTPUT"

      - name: run live linter tests
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          pytest -vvs tests/run_live_linter_test.py --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

  rerender-version-update-tests:
    name: rerender-version-update-tests
    needs: [tests]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - name: checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4

      - name: setup conda
        uses: mamba-org/setup-micromamba@f8b8a1e23a26f60a44c853292711bacfd3eac822 # v1
        with:
          environment-file: conda-lock.yml
          environment-name: webservices
          condarc: |
            show_channel_urls: true
            channel_priority: strict
            channels:
              - conda-forge

      - name: configure conda and install code
        run: |
          pip install --no-deps -e .

      - name: generate token
        id: generate_token
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        uses: actions/create-github-app-token@5d869da34e18e7287c1daad50e0b8ea0f506ce69 # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: setup live tests
        id: live_tests
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          git config --global user.name "conda-forge-admin"
          git config --global user.email "pelson.pub+conda-forge@gmail.com"
          git config --global pull.rebase false
          if [[ "${GITHUB_HEAD_REF}" != "" ]]; then
            branch="${GITHUB_HEAD_REF}"
          else
            branch="${GITHUB_REF_NAME}"
          fi
          echo "branch=${branch}" >> "$GITHUB_OUTPUT"

      - name: run live rerender tests
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_rerender_test.py --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run live version update tests
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_version_update_test.py --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: run live version update tests w/ user version
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'conda-forge/webservices-dispatch-action'
        run: |
          python tests/run_live_version_update_test.py --version=0.14 --branch=${{ steps.live_tests.outputs.branch }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
